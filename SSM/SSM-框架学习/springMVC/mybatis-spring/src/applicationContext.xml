<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	
	<!-- 数据库连接配置文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="10"></property>
		<property name="maxIdle" value="5"></property>	
	</bean>
	
	<!-- MyBatis 工厂 -->
	<bean name="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 核心配置文件 -->
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
	</bean>
	<!-- 
		如上相当于:
		String resource = "sqlMapConfig.xml";
		InputStream in = Resources.getResourceAsStream(resource);
		SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(in);
		如此创造 sqlSessionFactory 工厂
	 -->
	 
	 <!-- MyBatis Mapper 动态代理 
	 <bean name="userMapper" class="org.mybatis.spring.mapper.MapperFactoryBean">
	 	<property name="sqlSessionFactory" ref="sqlSessionFactoryBean"></property>
	 	需要 com.ssm.mybatis.mapper.UserMapper 指定具体接口
	 	下面有增强版
	 	<property name="mapperInterface" value="com.ssm.mybatis.mapper.UserMapper"></property>
	 </bean>
	 
	 	如上相当于:
	 	SqlSession sqlSession = sqlSessionFactory.openSession();
	 	给予 Mapper sqlSession
	 	然后 UserMapper mapper = sqlSession.getMapper(UserMapper.class);
	  -->
	  
	  <!-- 动态代理 增强版 扫描 -->
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  	<!-- 
	  	不需要注入 SqlSessionFactory 工厂 
	  	只需要注入基本包,会自动扫描子包 
	  	-->
	  	<property name="basePackage" value="com.ssm.mybatis.mapper"></property>
	  </bean>

</beans>
