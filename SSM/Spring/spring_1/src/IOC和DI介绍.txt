IOC: inverse of control		反转控制
	将创建对象的方式反转
	以前对象的创建是由开放人员维护，包括依赖关系也是自己注入
	使用spring之后，对象的创建以及依赖关系就由spring完成创建以及注入

DI: dependency injection	依赖注入
	实现IOC思想需要 ID支持
	注入方式:
		set方法注入
		构造方法注入
		字段注入
	注入类型:
		值类型注入	八大基本数据类型
		引用类型注入	将依赖对象注入

applicationContext & BeanFactory
	BeanFactory:接口，原始接口
		接口实现类的容器，特点是每次获得对象时候才会创建对象
	applicationContext:
			每次容器启动时，就会创建容器中配置的对象
			web开放中使用applicationContext
		从类路径下加载配置文件: ClassPathXmlApplicationContext

		