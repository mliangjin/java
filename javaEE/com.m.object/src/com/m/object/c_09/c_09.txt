DuoTai.java
	多态 
 		有继承关系
 		有方法重写
 		有父类引用指向子类对象
 	多态中的成员访问特点
 		A:成员变量
 			编译看左边，运行看左边 
 		B:构造方法
 			访问父类的构造方法，对父类的数据初始化
 		C:成员方法
 			编译看左边，运行看右边
 		D:静态方法
 			编译看左边，运行看左边
 			静态和类相关，算不上重写，所以访问的还是左边
 	
 	多态只能使用父类的功能，不能使用子类的特有功能
 	但是：可以通过向下转形，强转对象的类型，然后使用子类的特有功能

Abstract.java
	抽象类的概述
		一个不是具体的功能成为抽象类，而一个类如果有抽象的功能，该类必须是抽象类
	抽象类的特点
		A:抽象类和抽象方法必须用abstract修饰
		B:抽象类中不一定有抽象方法，有抽象方法的类必须定义为抽象类
		C:抽象类不能实例话，因为它不是具体的
			抽象类有构造方法，用于子类访问父类数据的初始化
		D:抽象类的子类
			a:抽象类的子类是一个抽象类
			b:抽象类的子类是一个具体的类，就必须重写父类的抽象方法
	抽象类的成员特点
		成员变量:可以是变量，可以是常量
		构造方法:有
		成员方法:可以是抽象的，可以是非抽象的
	抽象类的成员方法特性
		A:抽象方法 强制要求子类左的失去
		B:非抽象方法	子类继承的事情，提高代码复用性

Final.java
	final 关键字最终的意思
	常见的是它可以修饰，类，方法，变量
	final 类，该类不能被继承
	final 方法，该方法不能被继承后重写
	final 变量，该变量不能被修改，这个就是常量
	
	final 的初始化时机
		A:只能赋值一次
		B:在构造方法完毕前(非静态的常量)
	
	常量：
		A:字面值常量
			"hello"，10，true
		B:自定义常量
			final int i = 1
	
	面试题: final修饰局部变量
		局部变量是，基本数据类型，不能改变值
		局部变量是，引用数据类型，不能改变地址值，比如又赋值一个类
		
	在继承中的应用
		由于继承中有重写的这种特性
		如果父类不想被子类重写，那么加上final关键字就可以了